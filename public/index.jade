extends _layout
include _shared/posts

block main
  .home
    .bio.media
      .figure
        img.avatar(src="http://www.gravatar.com/avatar/9fe1649090216341429d39f2425a7d5c.png?s=192")
      .body
        :markdown
          I'm **Eric Drechsel** &mdash;
          a multiclass creative professional with deep roots in the web and open source, 
          a focus on user experience, education in math modeling and statistical methods,
          and an immense curiousity and propensity for diving in with new and challenging topics. 

          In my free time I ride my bike, eat things I find outdoors, take online courses, and experiment with distributed information systems.
    .activityStream.media
      .figure
        a.source(title="RSS Feed" href="https://zapier.com/engine/rss/196193/activity/")
          mixin icon("rss", ["fa-4x"], true)
      .body
        h2 My Stream
        ul.fa-ul
        .toolbar
          a.more(href title="Load more activities")
            mixin icon("ellipsis-h", ["fa-2x"], true)
    .articles
      h2 Featured Articles
      each post in posts_array(public.articles._data)
        mixin post_summary(post, post.slug, '/articles')

block footer

block scripts
  script(type='text/javascript').
    function renderActivityStream(root, extender, limit) {
      var ignore = [
        /^edrex pushed to master at edrex\/edrex.github.io/,
        /^RT @/
      ]
      var tpl = '<% _.forEach(items, function(i) { %><li><a href="<%- i.link %>" title="<%- i.source %> - <%- new Date(i.date).toDateString() %>"><i class="fa fa-li fa-<%- i.source %>"></i><%- i.title %></a></li><% }); %>';
      var n = 0;
      var items = [];

      function extend(){
        n = n + limit;
        root.html(_.template(tpl, { items: items.slice(0,n) }))
      }
      $.get("https://zapier.com/engine/rss/196193/activity/", function (data) {
        items = $(data).find("item").map(function () { 
          var el = $(this);
          return {
            title: el.find("title").text(),
            link: el.find("link").text(),
            description: el.find("description").text(),
            author: el.find("creator").text(),
            date: el.find("pubDate").text(),
            source: el.find('link').text().replace(/^https?:\/\/([a-z.]+\.)?([a-z]+)\.[a-z]+\/.*/,"$2")
          }
        }).get().filter(function(elt){
          return !(ignore.some(function(p){return p.test(elt.title)}));
        });
        extend();
        extender.click(function(event){
          event.preventDefault();
          extend();
          if (n >= items.length) {
            $(this).hide();
          }
        });
      });
    }
    (function() {
      var root = $('.activityStream')
      renderActivityStream(root.find('ul'), root.find('.more'), 5)
    }())
